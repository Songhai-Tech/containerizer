    pipeline {

  agent any
  parameters {
    string(name: 'APP', defaultValue: 'scss', description: 'Application name')
    string(name: 'REPO', defaultValue: 'https://github.com/Songhai-Tech/SCSS.git', description: "Repository of App you want to containerize")
    string(name: 'GIT_BRANCH', defaultValue: 'master', description: 'Git branch')
    string(name: 'DTR', defaultValue: 'sudirlay', description: 'DTR repository name')
    string(name: 'DOCKER_TAG', defaultValue: '1.0', description: 'Enter custom docker tag (version)')
  }

  stages {

   stage('Checkout Code'){
      steps {
        ansiColor('xterm') {
          deleteDir()
          checkout scm
          checkout([
            $class: 'GitSCM',
            branches: [[ name: "${params.GIT_BRANCH}" ]],
            doGenerateSubmoduleConfigurations: false,
            userRemoteConfigs: [[credentialsId: 'GIT_SCM', url: "${params.REPO}" ]],
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "${env.APP}"]]
          ])

            sh "uname -r"
            
           
 
        }
      }
    }
  


stage ('Docker Build & Publish'){
    steps{
      
       sh "cd ${params.APP} && ls && docker build -t ${params.DTR}/${params.APP}:${params.DOCKER_TAG} ."
         sh "docker push  ${params.DTR}/${params.APP}:${params.DOCKER_TAG}"
    }
 }
}

  post {
    success {
      sh "echo Success."
      deleteDir()
    }
    failure {
      sh "echo Failure."
    }
  } // end post

}
